AWSTemplateFormatVersion: "2010-09-09"

Description: Create small VPC for FridayHITT company

Resources:

  FridayHITTvpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: FridayHITTvpc

# Internet gateway and its attachment to  VPC
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IGW

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref FridayHITTvpc


#Public subnets and route table
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2 


  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.3.0/24
      #MapPublicIpOnLunch: false
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.4.0/24
      #MapPublicIpOnLunch: false
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PrivateSubnet2

# private subnets for database and route tables
  PrivateDBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.5.0/24
      #MapPublicIpOnLunch: false
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PrivateDBSubnet1

  PrivateDBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.6.0/24
      #MapPublicIpOnLunch: false
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: PrivateDBSubnet1

  


#security group for application load balancer ALB port 80
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Ports 80, 443
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: ALBSecurityGroup

#security group for ssh port 22
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: SSHSecurityGroup

#security group for webservers ports 80 and 443
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Ports 80, 443, 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref SSHSecurityGroup
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: WebServerSecurityGroup

#security group for DB RDS, MySQL port 3306
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Port 3306
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
      VpcId: !Ref FridayHITTvpc
      Tags:
        - Key: Name
          Value: DBSecurityGroup

Outputs:
  FridayHITTvpc:
    Export:
      Name: !Sub ${AWS::StackName}-FridayHITTvpc
    Value: !Ref FridayHITTvpc

  PublicSubnet1:
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1
    Value: !Ref PublicSubnet1


  PublicSubnet2:
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2
    Value: !Ref PublicSubnet2


  PrivateSubnet1:
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1
    Value: !Ref PrivateSubnet1


  PrivateSubnet2:
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2
    Value: !Ref PrivateSubnet2

  PrivateDBSubnet1:
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBSubnet1
    Value: !Ref PrivateDBSubnet1


  PrivateDBSubnet2:
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBSubnet2
    Value: !Ref PrivateDBSubnet2


  ALBSecurityGroup:
    Export:
      Name: !Sub ${AWS::StackName}-ALBSecurityGroup
    Value: !Ref ALBSecurityGroup

  SSHSecurityGroup:
    Export:
      Name: !Sub ${AWS::StackName}-SSHSecurityGroup
    Value: !Ref SSHSecurityGroup

  WebServerSecurityGroup:
    Export:
      Name: !Sub ${AWS::StackName}-WebServerSecurityGroup
    Value: !Ref WebServerSecurityGroup

  DBSecurityGroup:
    Export:
      Name: !Sub  ${AWS::StackName}-DBSecurityGroup
    Value: !Ref  DBSecurityGroup
    

    



  